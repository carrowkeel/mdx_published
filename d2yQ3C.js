/* Generated by ModelRxiv, editing could affect compatibility */

export const defaults = () => ({
	'target_steps': 100,
	's': '0.6',
	'c': '0.8',
	'h': '0.5',
	'q1': '0.5',
	'q2': '0',
	'm': '0.01'
});

export const step = (params, _step, t) => {
	const variables = Object.assign({}, params, _step);
	variables['sn'] = 0.5 * (1 - variables['c']) * (1 - variables['h'] * variables['s']);
	variables['sc'] = variables['c'] * (1 - variables['s']);
	variables['qm1'] = variables['q1'] * (1 - variables['m']) + variables['q2'] * variables['m'];
	variables['qm2'] = variables['q2'] * (1 - variables['m']) + variables['q1'] * variables['m'];
	variables['w1'] = variables['qm1']**2 * (1 - variables['s']) + 2 * variables['qm1'] * (1 - variables['qm1']) * (2 * variables['sn'] + variables['sc']) + (1 - variables['qm1'])**2;
	variables['w2'] = variables['qm2']**2 * (1 - variables['s']) + 2 * variables['qm2'] * (1 - variables['qm2']) * (2 * variables['sn'] + variables['sc']) + (1 - variables['qm2'])**2;
	variables['q1'] = (variables['qm1']**2 * (1 - variables['s']) + 2 * variables['qm1'] * (1 - variables['qm1']) * (variables['sn'] + variables['sc'])) / variables['w1'];
	variables['q2'] = (variables['qm2']**2 * (1 - variables['s']) + 2 * variables['qm2'] * (1 - variables['qm2']) * (variables['sn'] + variables['sc'])) / variables['w2'];
	return {'q1': variables['q1'], 'q2': variables['q2']};
};

export const result = (params, steps) => {
	const last_step = steps[steps.length - 1];
	const variables = Object.assign({}, params, last_step);
	const outcome = variables.q1 >= 0.5 && variables.q2 >= 0.5 ? 'spillover' : (variables.q1 < 0.5 && variables.q2 < 0.5 ? 'failure' : (variables.q1 >= 0.5 && variables.q2 < 0.5 ? 'dte1' : 'dte2'));
	return {outcome};
};

export const run = (params) => {
	let prev = undefined;
	for(let t = 0;t <= params.target_steps;t++) {
		const r = step(params, prev, t);
		if (!r)
			break;
		prev = r;
	}
	return result(params, [prev]);
};
